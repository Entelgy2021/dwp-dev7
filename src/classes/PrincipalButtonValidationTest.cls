@istest
private class PrincipalButtonValidationTest {
    @isTest static void rejectOwner(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;        
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;        
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();        
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);        
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();        
        PricebookEntry standardPrice = new PricebookEntry(
        Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;        
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;        
        PricebookEntry customPrice = new PricebookEntry(
        Pricebook2Id = customPB.Id, Product2Id = product.Id,
        UnitPrice = 12000, IsActive = true);
        insert customPrice;        
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
		userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        insert pcTipoGarantia;
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        pcAmortizacion = new fprd__GBL_Product_Configuration__c();
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        insert pcTipoAmortizacion;
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        System.runAs(userExecutiveOwner){
            List <String> response = SubmitToDiscart_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'btnReject');
            System.assertEquals(0, response.size());
        }  
    }
    @isTest static void risk_approvalFail(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
        Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
        Pricebook2Id = customPB.Id, Product2Id = product.Id,
        UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
		userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        System.runAs(userExecutiveOwner){
            List <String> response = Risk_Approval_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void risk_approvalGood(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
        Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
        Pricebook2Id = customPB.Id, Product2Id = product.Id,
        UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
		userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.gipr_Garantia__c='01';//cuenta en garantia
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Risk_Approval_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void risk_approvalFailChild(){
        User userAdmin;
        User userExecutiveOwner;
        User userOperative;
        User userAnalista;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userOperative = TestFactory.createUser('userOperative','Operativo');
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        userAdmin = TestFactory.createUser('userAdmin','System Administrator');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Risk_Approval_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void reevaluate(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Reevaluate_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void Unlink(){
        User userAdmin;
        User userExecutiveOwner;
        User userOperative;
        User userAnalista;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;        
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userOperative = TestFactory.createUser('userOperative','Operativo');
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        userAdmin = TestFactory.createUser('userAdmin','System Administrator');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Unlink_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void SanctionPriceFail(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = SanctionPrice_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void SanctionPriceGood(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');        
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.gipr_Garantia__c='01';//cuenta en garantia
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = SanctionPrice_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void FormalizeFail(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');        
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Formalize_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void FormalizeGood(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.gipr_Garantia__c='01';//cuenta en garantia
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Formalize_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void CompleteFail(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');        
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Complete_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(1, response.size());
        }
    }
    @isTest static void CompleteGood(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.gipr_Garantia__c='01';//cuenta en garantia
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Complete_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size(),'Falla 5');
        }
    }
    @isTest static void Approve(){
        User userAdmin;
        User userExecutiveOwner;
        User userOperative;
        User userAnalista;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.gipr_Garantia__c='01';//cuenta en garantia
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Approve_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
    @isTest static void Formalization(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');        
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli2.gipr_Tipo_Garantia__c='01';//dineraria
        oli2.gipr_Garantia__c='01';//cuenta en garantia
        oli2.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli2.cpliq_Amortizacion__c = '01';//Mensual
        update oli2;
        System.runAs(userOperativeBranch){
            List <String> response = Formalization_ValidationClass.getErrorMessagesList(opp2.Id, 'Opportunity', 'validationClass');
            System.assertEquals(1, response.size());
        }
    }
    @isTest static void PDF(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');        
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userOperativeBranch.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli2.gipr_Tipo_Garantia__c='01';//dineraria
        oli2.gipr_Garantia__c='01';//cuenta en garantia
        oli2.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli2.cpliq_Amortizacion__c = '01';//Mensual
        update oli2;
        System.runAs(userOperativeBranch){
            List <String> response = PDF_ValidationClass.getErrorMessagesList(opp2.Id, 'Opportunity', 'validationClass');
            System.assertEquals(1, response.size());
        }
    }
    @isTest static void QuoteGood(){
        User userExecutiveOwner;
        User userExecutiveBranch;
        User userOperativeBranch;
        Opportunity opp1;
        Opportunity opp2;
        Account account;
        OpportunityLineItem oli1;
        OpportunityLineItem oli2;
        Product2 product;
        fprd__GBL_Product_Configuration__c pc;
        fprd__GBL_Intervener__c intervener1;
        fprd__GBL_Guarantee__c guarantee1;
        fprd__GBL_Intervener__c intervener2;
        fprd__GBL_Guarantee__c guarantee2;
        User_Branch__c userBranchExe;  
        User_Branch__c userBranchOpe;
        fprd__GBL_Product_Configuration__c pcGarantia;
        fprd__GBL_Product_Configuration__c pcTipoGarantia;
        fprd__GBL_Product_Configuration__c pcTipoAmortizacion;
        fprd__GBL_Product_Configuration__c pcAmortizacion;
        userExecutiveOwner = TestFactory.createUser('userExecutiveOwner','Ejecutivo');
        userExecutiveOwner.prof_position_id__c='I49';
        userExecutiveBranch = TestFactory.createUser('userExecutiveBranch','Ejecutivo');
        userExecutiveBranch.prof_position_id__c='I49';
        userOperativeBranch = TestFactory.createUser('userOperativeBranch','Operativo');
        account = TestFactory.createAccount();
        opp1 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        opp2 = TestFactory.createOpportunity(account.Id, userExecutiveOwner.Id);
        product = TestFactory.createProduct();
        Id pricebookId = Test.getStandardPricebookId();
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = product.Id,UnitPrice = 10000, IsActive = true);
        insert standardPrice;
        Pricebook2 customPB = new Pricebook2(Name='PriceBook', isActive=true);
        insert customPB;
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = product.Id,
            UnitPrice = 12000, IsActive = true);
        insert customPrice;
        oli1 = New OpportunityLineItem(OpportunityId=opp1.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli1;
        oli2 = New OpportunityLineItem(OpportunityId=opp2.Id ,Quantity=1,TotalPrice=10.00,PricebookEntryId=customPrice.Id,Product2Id=product.Id);
        insert oli2;
        userBranchExe = TestFactory.createUserBranch(userExecutiveBranch.id);
        userBranchOpe = TestFactory.createUserBranch(userOperativeBranch.id);
        intervener1 = TestFactory.createParticipants(oli1.Id);
        guarantee1 = TestFactory.createGuarantee(oli1.Id);
        intervener2 = TestFactory.createParticipants(oli2.Id);
        guarantee2 = TestFactory.createGuarantee(oli2.Id);
        opp1.Branch_id__c=userBranchExe.branch_id__c;
        opp2.Branch_id__c=userBranchOpe.branch_id__c;
        pcGarantia = new fprd__GBL_Product_Configuration__c();
        pcGarantia.fprd__Label__c = 'Garantía';
        pcGarantia.fprd__DeveloperName__c = 'gipr_Garantia_PC00005';
        pcGarantia.fprd__Default_value__c = '02';
        pcGarantia.fprd__Map_field__c = 'gipr_Garantia__c';
        pcGarantia.fprd__Product__c = product.id;
        pcGarantia.fprd__Section_name__c = 'Información general del producto';
        pcGarantia.fprd__Type__c = 'LIST';
        pcGarantia.fprd__Values_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_field__c = 'gipr_Tipo_garantia_PC00005';
        pcGarantia.fprd__Visibility_control_value__c = 'No dineraria,Dineraria';
        pcGarantia.fprd__LoV_labels__c = 'Cuenta en garantía,Depósito cuenta a plazo,Super depósitos,Acciones y bono,Cartas de crédito,Certificados bancarios,Fianza bancaria,Fondos mutuos,Hipoteca,Leasing,Prenda agrícola,Prenda industrial,Prenda minera,Prenda transporte,Prenda vehicular,Warrants';
        pcGarantia.fprd__LoV_values__c = '01,02,03,04,05,06,07,09,10,11,12,13,14,15,16,17';
        insert pcGarantia;
        pcTipoGarantia = new fprd__GBL_Product_Configuration__c();
        pcTipoGarantia.fprd__Label__c = 'Tipo garantía';
        pcTipoGarantia.fprd__DeveloperName__c = 'gipr_Tipo_garantia_PC00005';
        pcTipoGarantia.fprd__Default_value__c = '03';
        pcTipoGarantia.fprd__Map_field__c = 'gipr_Tipo_Garantia__c';
        pcTipoGarantia.fprd__Product__c = product.id;
        pcTipoGarantia.fprd__Section_name__c = 'Información general del producto';
        pcTipoGarantia.fprd__Type__c = 'LIST';
        pcTipoGarantia.fprd__LoV_labels__c = 'Dineraria,No dineraria,Sin garantía';
        pcTipoGarantia.fprd__LoV_values__c = '01,02,03';
        insert pcTipoGarantia;
        pcAmortizacion = new fprd__GBL_Product_Configuration__c(); 
        pcAmortizacion.fprd__Label__c = 'Amortización';
        pcAmortizacion.fprd__DeveloperName__c = 'Amortizacion_PC00005';
        pcAmortizacion.fprd__Map_field__c = 'cpliq_Amortizacion__c';
        pcAmortizacion.fprd__Product__c = product.id;
        pcAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcAmortizacion.fprd__Type__c = 'LIST';
        pcAmortizacion.fprd__Visibility_control_field__c = 'Tipo_amortizacion_PC00005';
        pcAmortizacion.fprd__Visibility_control_value__c = 'En cuotas';
        pcAmortizacion.fprd__LoV_labels__c = 'Mensual,Trimestral,Semestral,Anual';
        pcAmortizacion.fprd__LoV_values__c = '01,02,03,04';
        insert pcAmortizacion;
        pcTipoAmortizacion = new fprd__GBL_Product_Configuration__c();
        pcTipoAmortizacion.fprd__Label__c = 'Tipo amortización';
        pcTipoAmortizacion.fprd__DeveloperName__c = 'Tipo_amortizacion_PC00005	';
        pcTipoAmortizacion.fprd__Default_value__c = '01';
        pcTipoAmortizacion.fprd__Map_field__c = 'cpliq_Tipo_amortizacion__c';
        pcTipoAmortizacion.fprd__Product__c = product.id;
        pcTipoAmortizacion.fprd__Section_name__c = 'Criterios de pago y liquidación';
        pcTipoAmortizacion.fprd__Type__c = 'LIST';
        pcTipoAmortizacion.fprd__LoV_labels__c = 'Al vencimiento,En cuotas,Manual';
        pcTipoAmortizacion.fprd__LoV_values__c = '01,02,04'; 
        insert pcTipoAmortizacion;
        oli1.gipr_Tipo_Garantia__c='01';//dineraria
        oli1.gipr_Garantia__c='01';//cuenta en garantia
        oli1.cpliq_Tipo_amortizacion__c = '02';//En cuotas
        oli1.cpliq_Amortizacion__c = '01';//Mensual
        update oli1;
        System.runAs(userExecutiveOwner){
            List <String> response = Quote_ValidationClass.getErrorMessagesList(opp1.Id, 'Opportunity', 'validationClass');
            System.assertEquals(0, response.size());
        }
    }
}